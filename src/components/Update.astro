---
import type { HTMLTag, Polymorphic } from "astro/types";

import InfoIcon from "#components/InfoIcon.astro";

type Props<Tag extends HTMLTag> = Polymorphic<{
	as: Tag;
	date: string;
	inline?: boolean;
}>;

const {
	as: Tag = "div",
	date,
	inline = true,
	class: className,
	...props
} = Astro.props;
---

<Tag class:list={["update", className]} data-is-inline={inline} {...props}>
	<div class="icon"><InfoIcon /></div>

	<div>
		<p class="date">
			Update ({date})
		</p>

		<slot />
	</div>
</Tag>

<style>
	.update {
		display: grid;
		grid-template-columns: max-content 1fr;
		align-items: baseline;
		justify-content: center;
		gap: var(--space-md);
		width: calc(100cqw + var(--content-padding) * 2);
		margin-inline-start: calc(var(--content-padding) * -1);
		margin-block: var(--rhythm-md);
		border-block: var(--outline-width) solid var(--outline-color);
		padding: var(--content-padding);
		background-color: hsl(from var(--outline-color) h s l / 0.1);

		:global(p) {
			max-width: 65ch;
		}

		@container (min-width: 65ch) {
			&[data-is-inline="true"] {
				width: 100%;
				margin-inline-start: 0;
				border: var(--outline-width) solid var(--outline-color);
				border-radius: var(--outline-width);
			}

			&[data-is-inline="false"] {
				margin-inline-start: calc(50% - (50cqw + var(--content-padding)));
			}
		}

		@container (min-width: 75ch) {
			&[data-is-inline="true"] {
				width: calc(100% + var(--content-padding) * 2);
				margin-inline-start: calc(var(--content-padding) * -1);
			}

			&[data-is-inline="false"] {
				grid-template-columns: repeat(2, max-content);
				padding-inline-start: 0;
			}
		}

		@media (prefers-color-scheme: dark) {
			background-color: hsl(from var(--color-black) h s l / 0.5);
		}
	}

	.icon {
		position: relative;
		top: -1px;
		color: var(--color-primary);
	}

	.date {
		margin: 0;
		font-family: var(--font-family-subheading);
		font-size: var(--font-size-sm);
		letter-spacing: var(--letter-spacing-wide);
		text-transform: uppercase;
		color: var(--color-primary);
		text-wrap: pretty;
	}
</style>
