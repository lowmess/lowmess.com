---
import type { HTMLTag, Polymorphic } from "astro/types";
import { type CollectionEntry } from "astro:content";

type Props<Tag extends HTMLTag> = Polymorphic<{
	as: Tag;
	headingLevel?: "span" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
	post: CollectionEntry<"blog">;
}>;

const {
	as: Tag = "div",
	headingLevel: Heading = "h3",
	class: className,
	post,
	...props
} = Astro.props;
---

<Tag class:list={["preview", className]} {...props}>
	<Heading class="title" data-is-draft={post.data.draft || undefined}
		><a href={`/blog/${post.id}`} set:html={post.data.title} />{
			post.data.draft && <span class="draft">Draft</span>
		}</Heading
	>

	<p set:html={post.data.archiveReason || post.data.description} />
</Tag>

<style>
	.title {
		margin-block: 0;
		font-family: var(--font-family-heading);
		font-size: var(--font-size-lg);
		font-weight: 500;
		text-wrap: balance;

		&[data-is-draft="true"] {
			display: inline-flex;
			align-items: center;
			gap: var(--space-sm);
		}
	}

	a {
		color: var(--color-text);
		text-decoration: none;

		&:hover {
			color: var(--color-primary);
		}
	}

	p {
		max-width: 55ch;
		margin-block-start: var(--rhythm-xs);
		margin-block-end: 0;
		text-wrap: pretty;
		color: hsl(from var(--color-text) h s l / 0.9);
	}

	:global(.preview p a) {
		color: var(--color-text);
		text-decoration-color: var(--color-primary);

		&:hover {
			color: var(--color-primary);
		}
	}

	.draft {
		display: inline-block;
		border-radius: 2px;
		padding-block: var(--space-xxs);
		padding-inline: var(--space-sm);
		background-color: var(--color-primary);
		font-family: var(--font-family-subheading);
		font-size: var(--font-size-xs);
		color: var(--color-white);
		text-transform: uppercase;
		letter-spacing: var(--letter-spacing-narrow);
	}
</style>
